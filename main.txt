/***********************************************************************\
Name: Omar Yossuf
SID: 900212166
Assignment: #01
Instructor: Nada Abd-Elsattr
Course: CSCE 2203
Section: #01
Date: Sep 15th, 2022
\***********************************************************************/
#include "Disjoints.h"
#include "Graph.h"

void PrintSets(vector<int> const &universe, DisjointsSet &ds)
{
    for(int i : universe)
    {
        cout << ds.find(i) << " ";
    }
    cout << endl;
}

void PrintGraph(Graph const& graph, int n)
{
    for(int i = 0; i < n; i++)
    {
        cout << i << " --> ";
        
        for(int v: graph.adjList[i])
        {
            cout << v << " ";
        }
        cout << endl;
    }
}

int main()
{
    vector<Edge> edges =
    {
        {0, 1}, {0, 2}, {1, 3}, {1, 4}, {3, 4}
    };
    
    int n = 5;
        
    Graph graph(edges, n);
    
    PrintGraph(graph, n);
    
    int c = graph.DetectCycle(n);
    
    if (c == 0)
        cout << endl << "no cycles found!" << endl;
    else
        cout << endl << "total: \n" << c << " cycle(s) found!" << endl;
    
    vector<Edge> edges_2 =
    {
        {0, 1}, {0, 2}, {1, 3}, {1, 4}
    };
    
    int n_2 = 5;
        
    Graph graph_2(edges_2, n_2);
    
    PrintGraph(graph_2, n_2);
    
    int c_2 = graph_2.DetectCycle(n_2);
    
    if (c_2 == 0)
        cout << endl << "no cycles found!" << endl;
    else
        cout << endl << "total: \n" << c << " cycle(s) found!" << endl;
}
